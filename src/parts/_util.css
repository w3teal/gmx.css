.primary {
  background: var(--primary) !important;
  color: var(--on-primary) !important;
}

.primary-container {
  background: var(--primary-container) !important;
  color: var(--on-primary-container) !important;
}

.secondary {
  background: var(--secondary) !important;
  color: var(--on-secondary) !important;
}

.secondary-container {
  background: var(--secondary-container) !important;
  color: var(--on-secondary-container) !important;
}

.tertiary {
  background: var(--tertiary) !important;
  color: var(--on-tertiary) !important;
}

.tertiary-container,
::selection {
  background: var(--tertiary-container) !important;
  color: var(--on-tertiary-container) !important;
}

.background {
  background: var(--background) !important;
  color: var(--on-background) !important;
}

.surface {
  background: var(--surface) !important;
  color: var(--on-surface) !important;
}

.inverse-surface {
  background: var(--inverse-surface) !important;
  color: var(--inverse-on-surface) !important;
}

.surface-variant {
  background: var(--surface-variant) !important;
  color: var(--on-surface-variant) !important;
}

.error {
  background: var(--error) !important;
  color: var(--on-error) !important;
}

.error-container {
  background: var(--error-container) !important;
  color: var(--on-error-container) !important;
}

.accent-gradient {
  background-image: linear-gradient(to bottom, var(--primary-container), var(--tertiary-container)) !important;
  color: var(--on-primary-container) !important;
}

:where([class*=shadow]) {
  box-shadow: var(--shadow-size) !important;
  --shadow-size: var(--elevation-2);
}

.shadow-none {
  --shadow-size: 0;
}

.shadow-auto {
  --shadow-size: auto;
}

.shadow-s {
  --shadow-size: var(--elevation-1);
}

.shadow-l {
  --shadow-size: var(--elevation-3);
}

.shadow-xl {
  --shadow-size: var(--elevation-4);
}

.shadow-xxl {
  --shadow-size: var(--elevation-5);
}

:where([class*=margin]):not(.margin-left, .margin-right, .margin-top, .margin-bottom, .margin-horiz, .margin-vert) {
  margin: var(--margin-size) !important;
}

:where([class*=margin]) {
  --margin-size: 1rem;
}

.margin-none {
  --margin-size: 0;
}

.margin-auto {
  --margin-size: auto;
}

.margin-xs {
  --margin-size: 0.25rem;
}

.margin-s {
  --margin-size: 0.5rem;
}

.margin-l {
  --margin-size: 1.5rem;
}

.margin-xl {
  --margin-size: 2rem;
}

.margin-left,
.margin-horiz {
  margin-inline-start: var(--margin-size) !important;
}

.margin-right,
.margin-horiz {
  margin-inline-end: var(--margin-size) !important;
}

.margin-top,
.margin-vert {
  margin-block-start: var(--margin-size) !important;
}

.margin-bottom,
.margin-vert {
  margin-block-end: var(--margin-size) !important;
}

:where([class*=br]) {
  display: block;
}

:where([class*=padding]):not(.padding-left, .padding-right, .padding-top, .padding-bottom, .padding-horiz, .padding-vert),
:where([class*=br]) {
  padding: var(--padding-size) !important;
}

:where([class*=padding]) {
  --padding-size: 1rem;
}

.padding-none {
  --padding-size: 0;
}

.padding-auto {
  --padding-size: auto;
}

.padding-xs,
.br {
  --padding-size: 0.25rem;
}

.padding-s,
.br-l {
  --padding-size: 0.5rem;
}

.padding-l,
.br-xl {
  --padding-size: 1.5rem;
}

.padding-xl {
  --padding-size: 2rem;
}

.padding-left,
.padding-horiz {
  padding-inline-start: var(--padding-size) !important;
}

.padding-right,
.padding-horiz {
  padding-inline-end: var(--padding-size) !important;
}

.padding-top,
.padding-vert {
  padding-block-start: var(--padding-size) !important;
}

.padding-bottom,
.padding-vert {
  padding-block-end: var(--padding-size) !important;
}

:where([class*=gap]) {
  gap: var(--gap-size) !important;
  --gap-size: 1rem;
}

.gap-none {
  --gap-size: 0;
}

.gap-auto {
  --gap-size: auto;
}

.gap-xs {
  --gap-size: 0.25rem;
}

.gap-s {
  --gap-size: 0.5rem;
}

.gap-l {
  --gap-size: 1.5rem;
}

.gap-xl {
  --gap-size: 2rem;
}

:where([class*=round]) {
  border-radius: var(--round-size) !important;
  --round-size: var(--rounding-medium);
}

.round-none {
  --round-size: var(--rounding-none);
}

.round-xs {
  --round-size: var(--rounding-extra-small);
}

.round-s {
  --round-size: var(--rounding-small);
}

.round-l {
  --round-size: var(--rounding-large);
}

.round-xl {
  --round-size: var(--rounding-extra-large);
}

.round-full {
  --round-size: var(--rounding-full);
}

.hidden {
  display: none !important;
}

.block {
  display: block !important;
}

.inline-block {
  display: inline-block !important;
}

.inline {
  display: inline !important;
}

.flex {
  display: flex !important;
}

.inline-flex {
  display: inline-flex !important;
}

.flex-row {
  flex-direction: row !important;
}

.flex-col {
  flex-direction: column !important;
}

.flex-wrap {
  flex-wrap: wrap !important;
}

.flex-nowrap {
  flex-wrap: nowrap !important;
}

.flex-max,
.all-max * {
  display: flex !important;
  flex: 1 !important;
  flex-grow: 1 !important;
}

:where([class*=align]) {
  align-content: var(--alignment) !important;
  align-items: var(--alignment) !important;
  align-self: var(--alignment) !important;
}

.align-start {
  --alignment: start;
}

.align-end {
  --alignment: end;
}

.align-center {
  --alignment: center;
}

.align-baseline {
  --alignment: baseline;
}

.align-stretch {
  --alignment: stretch;
}

:where([class*=justify]) {
  justify-content: var(--justification) !important;
  justify-items: var(--justification) !important;
  justify-self: var(--justification) !important;
}

.justify-left {
  --justification: left;
}

.justify-center {
  --justification: center;
}

.justify-right {
  --justification: right;
}

.justify-between {
  --justification: space-between;
}

.justify-around {
  --justification: space-around;
}

:where([class*=text]) {
  text-align: var(--text) !important;
}

.text-left {
  --text: left;
}

.text-center {
  --text: center;
}

.text-right {
  --text: right;
}

:where([class*=overflow]) {
  overflow: var(--overflow) !important;
}

.overflow-auto {
  --overflow: auto;
}

.overflow-hidden {
  --overflow: hidden;
}

.overflow-visible {
  --overflow: visible;
}

.overflow-scroll {
  --overflow: scroll;
}

:where([class*=width]) {
  width: var(--width) !important;
}

.width-min {
  --width: min-content;
}

.width-max {
  --width: max-content;
}

.width-fit {
  --width: fit-content;
}

.width-full {
  --width: 100%;
}

.scroll {
  overflow-x: auto !important;
}

.scroll-y {
  overflow-y: auto !important;
}